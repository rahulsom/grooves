import nu.studer.gradle.jooq.JooqEdition

buildscript {
    dependencies {
        classpath(libs.h2)

        classpath(libs.jaxb.api)
        classpath(libs.sunjaxb.core)
        classpath(libs.sunjaxb.impl)
        classpath(libs.activation)
    }
}

plugins {
    id("org.jetbrains.kotlin.jvm")
    id("org.jlleitschuh.gradle.ktlint")
    id("nu.studer.jooq").version("9.0")
    id("org.flywaydb.flyway").version("10.13.0")
}

version = "0.0.1-SNAPSHOT"

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation(libs.groovy.all)

    implementation(libs.google.guice)
    implementation(libs.google.guava)

    implementation(libs.h2)
    implementation("org.jooq:jooq")

    implementation(libs.jaxb.api)
    implementation(libs.sunjaxb.core)
    implementation(libs.sunjaxb.impl)
    implementation(libs.activation)
    compileOnly(libs.javax.annotation.api)

    implementation(project(":grooves-api"))

    implementation(libs.rxjava2)
    implementation(libs.slf4j.api)

    jooqGenerator(libs.h2)

    runtimeOnly(libs.logback.classic)

    testImplementation(libs.junit.api)
    testImplementation(libs.awaitility)
}

jooq {
    edition = JooqEdition.OSS
    configurations {
        main {
            generationTool {
                jdbc {
                    driver = "org.h2.Driver"
                    url = "jdbc:h2:file:${buildDir}/schema"
                    user = "sa"
                    password = ""
                }
                generator {
                    name = "org.jooq.codegen.DefaultGenerator"
                    strategy {
                        name = "org.jooq.codegen.DefaultGeneratorStrategy"
                    }
                    database {
                        name = "org.jooq.meta.h2.H2Database"
                        inputSchema = "public"
                    }
                    generate {
                        relations = true
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = "grooves.example.pushstyle"
                    }
                }
            }
        }
    }
}

flyway {
    url = "jdbc:h2:file:${buildDir}/schema"
    user = "sa"
    password = ""
    schemas = ["public"]
}

javadoc {
    exclude("example/pushstyle/tables/**")
}

generateJooq.dependsOn("flywayMigrate")
compileKotlin.dependsOn("generateJooq")

tasks.named("checkstyleMain", Checkstyle) { it.source = "src/main/java" }
tasks.named("runKtlintCheckOverMainSourceSet") { it.dependsOn("generateJooq") }

test {
    useJUnitPlatform()
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}