plugins {
    id("io.openliberty.tools.gradle.Liberty") version "3.5.1"
    id("war")
    id("groovy")
}

version = '0.1'

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    providedCompile 'javax:javaee-api:8.0.1', "javax.xml.bind:jaxb-api:2.3.1"

    compileOnly 'org.projectlombok:lombok:1.18.24'
    compileOnly "org.jetbrains:annotations:23.0.0"

    implementation project(':grooves-java')
    implementation project(':grooves-example-test')
    implementation "org.slf4j:slf4j-api:2.0.3"
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'io.reactivex:rxjava-reactive-streams:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.8'

    libertyFeature 'io.openliberty.features:jaxrs-2.1:22.0.0.11'
}

liberty {
    server {
        features {
            name = [
                'jaxrs-2.1',
                /*'adminCenter-1.0',*/
                /*'restfulWS-3.0',*/
            ]
        }
    }
}

libertyRun.dependsOn 'war'
libertyStart.dependsOn 'war'

int statusOfUrl(String url) {
    int status = -1
    try {
        content = url.toURL().openConnection().with { conn ->
            readTimeout = 10000
            status = responseCode
        }
    } catch (Exception ignore) {
        // ignore
    }
    status
}

libertyStart.doLast {
    int attempt = 0
    while (attempt < 20) {
        println "Waiting (${++attempt})..."
        if (statusOfUrl('http://localhost:9080/grooves-example-javaee/patient') == 200) {
            break
        }
        sleep 5000
    }
}

test.dependsOn 'libertyStart'
test.finalizedBy 'libertyStop'

test {
    useJUnitPlatform()
}