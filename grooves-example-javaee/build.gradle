plugins {
    id("io.openliberty.tools.gradle.Liberty").version("3.9.5")
    id("war")
    id("groovy")
}

version = "0.1"

dependencies {
    annotationProcessor(libs.lombok)

    providedCompile(libs.javaee.api)
    providedCompile(libs.jaxb.api)

    compileOnly(libs.lombok)
    compileOnly(libs.jetbrains.annotations)

    implementation(project(":grooves-java"))
    implementation(project(":grooves-example-test"))
    implementation(libs.slf4j.api)
    implementation(libs.lang3)
    implementation(libs.rxjava.core)
    implementation(libs.rxjava.reactivestreams)

    libertyFeature(libs.liberty.jaxrs)
}

liberty {
    server {
        features {
            name = ["jaxrs-2.1"]
        }
    }
}

libertyRun.dependsOn("war")
libertyStart.dependsOn("war")

int statusOfUrl(String url) {
    int status = -1
    try {
        content = url.toURL().openConnection().with { conn ->
            readTimeout = 10000
            status = responseCode
        }
    } catch (Exception ignore) {
        // ignore
    }
    status
}

libertyStart.doLast {
    int attempt = 0
    while (attempt < 20) {
        println "Waiting (${++attempt})..."
        if (statusOfUrl("http://localhost:9080/grooves-example-javaee/patient") == 200) {
            break
        }
        sleep 5000
    }
}

test.dependsOn("libertyStart")
test.finalizedBy("libertyStop")

test {
    useJUnitPlatform()
}